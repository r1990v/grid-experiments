.grid { display: grid; }

/**
 * Base = width of grid - (gutters + padding)
 * Width = Base / 4
 * Height = 1270 * width / 1000
 */
:root {
  --base: calc(100vw - 3rem);
  --width: calc(var(--base) / 4);
  --height: calc(1270 * var(--width) / 1000);
}

.layout {
  max-width: 64em;
  grid-gap: 1rem;
  grid-auto-flow: dense;
  grid-template-columns: repeat(2, var(--width));
  grid-auto-rows: var(--height);
}

/*
@media screen and (min-width: 30em)
*/

@media screen and (min-width: 30em) and (max-width: 60em) {
  :root { --base: calc(100vw - 4rem); }
  .layout { grid-template-columns: repeat(3, var(--width)); }
}

@media screen and (min-width: 60em) {
  :root { --base: calc(60em - 5rem); }
  .layout { grid-template-columns: repeat(4, var(--width)); }
}

/**
 * Col and row spans
 */
.span-1 { grid-column-end: span 1; }
.span-2 { grid-column-end: span 2; }

.tall-1 { grid-row-end: span 1; }
.tall-2 { grid-row-end: span 2; }

@media screen and (min-width: 30em) {
  .span-1-ns { grid-column-end: span 1; }
  .span-2-ns { grid-column-end: span 2; }
  .span-3-ns { grid-column-end: span 3; }
}

@media screen and (min-width: 30em) and (max-width: 60em) {
  .span-1-m { grid-column-end: span 1; }
  .span-2-m { grid-column-end: span 2; }
  .span-3-m { grid-column-end: span 3; }
}

@media screen and (min-width: 60em) {
  .span-1-l { grid-column-end: span 1; }
  .span-2-l { grid-column-end: span 2; }
  .span-3-l { grid-column-end: span 3; }
}



.zoom {
  -moz-osx-font-smoothing: grayscale;
  backface-visibility: hidden;
  transform: translateZ(0);
  transition: transform 0.3s ease-out;
}
.zoom:hover,
.zoom:focus { transform: scale(1.05); }
.zoom:active { transform: scale(1); }
